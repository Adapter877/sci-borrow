name: Release

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  ORIGINAL_IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
      id-token: write
    outputs:
      full_image_tag: ${{ steps.set_full_image_tag.outputs.full_image_tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # เช็คเอาท์ repository ปัจจุบัน

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: 'v2.1.1'  # ติดตั้ง cosign เวอร์ชัน 2.1.1

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2  # ตั้งค่า Docker buildx

      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}  # ล็อกอินเข้าสู่ Docker registry

      - name: Set lowercase image name
        id: set_image_name
        run: echo "IMAGE_NAME=$(echo ${{ env.ORIGINAL_IMAGE_NAME }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix={{branch}}-,format=long  # สร้างแท็กโดยใช้ SHA แบบเต็มของ commit ปัจจุบัน

      - name: Set full image tag
        id: set_full_image_tag
        run: echo "full_image_tag=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_ENV
             echo "::set-output name=full_image_tag::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
  deploy:
    needs: build
    runs-on: ubuntu-20.04

    steps:
      - name: Setup Git
        run: |
          git config --global user.name "Github Actions"
          git config --global user.email "actions@github.com"  # ตั้งค่า Git

      - name: Checkout gitops repository
        uses: actions/checkout@v3
        with:
          repository: Adapter877/sci-borrow
          ref: main
          token: ${{ secrets.GH_PAT }}  # เช็คเอาท์ repository สำหรับ gitops

      - name: Update image tag for UAT
        if: ${{ contains(github.event.release.tag_name, '-beta') }}
        env:
          REGISTRY: ghcr.io
          ORIGINAL_IMAGE_NAME: ${{ github.repository }}
          FULL_IMAGE_TAG: ${{ needs.build.outputs.full_image_tag }}
        run: |
          echo "Updating image tag to: $FULL_IMAGE_TAG"
          IMAGE_NAME=$(echo $ORIGINAL_IMAGE_NAME | tr '[:upper:]' '[:lower:]')
          echo "Cleaned image tag: $FULL_IMAGE_TAG"
          yq eval ".spec.template.spec.containers[0].image = \"$FULL_IMAGE_TAG\"" -i deployment/deployment.yaml
          git add deployment/deployment.yaml
          git commit -m "Set 'web' image tag to '${FULL_IMAGE_TAG}'"
          git push  # อัปเดต image tag ในไฟล์ deployment สำหรับ UAT

      - name: Check deployment file content
        run: cat deployment/deployment.yaml  # ตรวจสอบเนื้อหาของไฟล์ deployment หลังจากอัปเดต