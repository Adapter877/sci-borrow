name: Release

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.build.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and push Docker image
        id: build
        run: |
          IMAGE_TAG=$(date +%Y%m%d%H%M%S)
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          docker build -t ghcr.io/adapter877/sci-borrow:${IMAGE_TAG} .
          echo "::set-output name=image_tag::${IMAGE_TAG}"
          docker push ghcr.io/adapter877/sci-borrow:${IMAGE_TAG}

  update-deployment:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ contains(github.event.release.tag_name, '-beta') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install yq
        run: |
          sudo apt-get update
          sudo apt-get install -y yq

      - name: Update image tag for UAT
        run: |
          IMAGE_TAG=${{ needs.build.outputs.image_tag }}
          if [ -z "$IMAGE_TAG" ]; then
            echo "Image tag is empty"
            exit 1
          fi
          echo "Updating image tag to: ${IMAGE_TAG}"
          yq eval '.spec.template.spec.containers[0].image = "'"${IMAGE_TAG}"'"' -i deployment/deployment.yaml
          git add deployment/deployment.yaml
          git commit -m "Set 'web' image tag to '${IMAGE_TAG}'"
          git push
